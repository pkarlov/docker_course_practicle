
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'dbt_cource_practice'
version: '1.0.0'

# This setting configures which "profile" dbt uses for this project.
profile: 'dbt_cource_practice'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
models:
  +post_hook : 
    ["
          CREATE SCHEMA IF NOT EXISTS logs;
          CREATE TABLE IF NOT EXISTS {{ target.database }}.logs.dbt_logs (
              event_date timestamp,
              event_name varchar(100),
              node_name varchar(255)
          );
          INSERT INTO {{ target.database }}.logs.dbt_logs
          (event_date, event_name, node_name)
          VALUES (
              CURRENT_TIMESTAMP, 'run model', '{{ model.name }}'
          )",
      "{{ check_dependencies() }}"]
  dbt_cource_practice:
    intermediate:
      flights:
        +meta:
          owner: "dbt_project_yml@gmail.com"
          year_created: 2025      
      +meta:
        tag: 'intermediate' #В задании написано именно tag
      +tags:
        - 'intermediate'  
    staging:
      +meta:
        tag: 'staging' 
      +tags:
        - 'staging'  # За то так работает в командах - уточнить на занятии в чем было задание.

seeds:
  dbt_course_practice:
    schema: seeds
    
vars:
  surrogate_key_treat_nulls_as_empty_strings: true #turn on legacy behaviour

on-run-end: "{{ dbt_project_evaluator.print_dbt_project_evaluator_issues() }}"  